{
	"info": {
		"_postman_id": "f6c9d4ff-911a-4090-be64-26c79b556bd9",
		"name": "DataModel_PUT_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER_DataType",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa84764d-b5fe-4539-8289-4008bf8b6019",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_data_type}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url_data_type}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url_data_type}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DataModel_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c943100d-98fc-41c8-8dc0-26afc768cb69",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.modelId).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Parameters set correctly\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.descr).to.eql(\"data model sample\");",
							"    pm.expect(jsonData.payload.type).to.eql(\"AAA\");",
							"    pm.expect(jsonData.payload.model).to.eql(\"model\");",
							"    ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DataModel_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27786832-0e04-406a-9590-4b3edd479c13",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"var status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.modelId).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Parameters set correctly\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.descr).to.eql(\"data model sample modified\");",
							"    pm.expect(jsonData.payload.type).to.eql(\"AAA\");",
							"    pm.expect(jsonData.payload.model).to.eql(\"model modified\");",
							"    ",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_modified}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00346960-c085-4204-92a3-0d42dd14d3ea",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.modelId).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Parameters set correctly\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.descr).to.eql(\"data model sample modified\");",
							"    pm.expect(jsonData.payload.type).to.eql(\"AAA\");",
							"    pm.expect(jsonData.payload.model).to.eql(\"model modified\");",
							"    ",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "40df6836-9b61-4063-903a-a49833c94928",
			"key": "api_url",
			"value": "api/dataModels",
			"type": "string"
		},
		{
			"id": "cf35808b-2aee-4d16-83f9-731337a6f7a6",
			"key": "item_name",
			"value": "666",
			"type": "string"
		},
		{
			"id": "52c0e25b-d2d5-464e-b0f3-57a2fdb87924",
			"key": "payload",
			"value": "{\n    \"modelId\": \"{{item_name}}\",\n    \"descr\": \"data model sample\",\n    \"type\": \"AAA\",\n    \"model\": \"model\",\n    \"stylesheet\": \"\"\n}",
			"type": "string"
		},
		{
			"id": "a4f75526-9f18-42c2-9a82-23e184577233",
			"key": "payload_modified",
			"value": "{\n    \"modelId\": \"{{item_name}}\",\n    \"descr\": \"data model sample modified\",\n    \"type\": \"AAA\",\n    \"model\": \"model modified\",\n    \"stylesheet\": \"\"\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "e3dae78b-64d8-4c5e-b779-0982e35bc2d4",
			"key": "payload_data_type",
			"value": "{\n    \"name\": \"AAA\",\n    \"code\": \"AAA\",\n    \"attributes\": [{\n        \"type\": \"Boolean\",\n        \"code\": \"attrCode\",\n        \"name\": \"attr name\",\n        \"status\": \"0\",\n        \"roles\": [{\n            \"code\": \"firstCode\",\n            \"descr\": \"firstCode\"\n        },{\n            \"code\": \"secondCode\",\n            \"descr\": \"secondDescr\"\n        }],\n        \"disablingCodes\": [\n            \"firstDisablingCode\",\n            \"secondDisablingCode\"\n        ],\n        \"mandatory\": true,\n        \"listFilter\": true,\n        \"indexable\": true,\n        \"enumeratorStaticItems\": null,\n        \"enumeratorStaticItemsSeparator\": null,\n        \"enumeratorExtractorBean\": null,\n        \"validationRules\": {\n            \"ognlValidation\": {\n                \"ognlExpression\": \"expression\",\n                \"applyOnlyToFilledAttr\": false,\n                \"helpMessage\": \"Help message\",\n                \"keyForHelpMessage\": null,\n                \"errorMessage\": \"Error Message\",\n                \"keyForErrorMessage\": null\n            },\n            \"minLength\": null,\n            \"maxLength\": null,\n            \"regex\": null,\n            \"rangeStartString\": null,\n            \"rangeEndString\": null,\n            \"rangeStartStringAttribute\": null,\n            \"rangeEndStringAttribute\": null,\n            \"equalString\": null,\n            \"equalStringAttribute\": null,\n            \"rangeStartDate\": null,\n            \"rangeEndDate\": null,\n            \"rangeStartDateAttribute\": null,\n            \"rangeEndDateAttribute\": null,\n            \"equalDate\": null,\n            \"equalDateAttribute\": null,\n            \"rangeStartNumber\" : null,\n                \"rangeStartNumberAttribute\" : null,\n            \"rangeEndNumber\" : null,\n            \"rangeEndNumberAttribute\" : null,\n            \"equalNumber\" : null,\n            \"equalNumberAttribute\" : null\n        },\n        \"nestedAttribute\": null,\n        \"compositeAttributes\": null\n    }],\n      \"viewPage\": null,\n      \"listModel\": null,\n      \"defaultModel\": null\n}\n",
			"type": "string",
			"description": ""
		},
		{
			"id": "5b16e490-7f56-4a86-bb28-2f8c23ce7b9a",
			"key": "api_url_data_type",
			"value": "api/dataTypes",
			"type": "string",
			"description": ""
		}
	]
}