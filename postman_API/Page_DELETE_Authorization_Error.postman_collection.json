{
	"info": {
		"_postman_id": "8585f25e-e569-48b4-9f89-76229aa5a1fb",
		"name": "Page_DELETE_Authorization_Error",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_User_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "96ac0eab-dea5-4372-8169-b5df9fb0f2bb",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{users_api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{users_api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f316b0c3-fe20-4887-886f-510a2cc646a0",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var status_code = 200",
							"var item_name = pm.variables.get(\"item_name\");",
							"var user_name = item_name;",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Username and user status set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.username).to.be.eql(user_name);",
							"    pm.expect(pm.response.json().payload.status).to.be.eql(\"active\");",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{user_payload}}"
				},
				"url": {
					"raw": "{{url}}/{{users_api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{users_api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3411f6fc-c4a2-4dce-899c-ec3e90943bf1",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"var user_name = item_name;",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Username and user status set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.username).to.be.eql(user_name);",
							"    pm.expect(pm.response.json().payload.status).to.be.eql(\"active\");",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{users_api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{users_api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Page_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a96410d-4e93-427c-b66f-93744f2e2108",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{page_payload}}"
				},
				"url": {
					"raw": "{{url}}/{{pages_api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{pages_api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Access_Token_User_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2b1d69d-2215-43d9-8395-1d675de2bcaa",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"//postman.setEnvironmentVariable(\"access_token\", data.access_token);",
							"//postman.setEnvironmentVariable(\"refresh_token\", data.refresh_token);",
							"postman.setEnvironmentVariable(\"user_token\", data.access_token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests['Access Token is not blank'] = data.access_token !== \"\";",
							"tests['Refresh Token is not blank'] = data.refresh_token !== \"\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "28ca9674-96f9-40b8-8feb-2e724de9ff4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{item_name}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "REST_API",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "REAST_API_SEC",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/OAuth2/access_token",
					"host": [
						"{{url}}"
					],
					"path": [
						"OAuth2",
						"access_token"
					]
				},
				"description": "Request to return the Access Token (based on Bearer Token)"
			},
			"response": []
		},
		{
			"name": "Page_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5ba7403b-251e-4aab-8228-2d4f98155a35",
						"type": "text/javascript",
						"exec": [
							"//Contract: 400, 2, The widget <widgetCode> cannot be deleted because it is locked",
							"var status_code = 403;",
							"var error_code = '120';",
							"var error_message = \"is not allowed to\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{pages_api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{pages_api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_DELETED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04184fa3-5945-478c-8ecb-70d612640720",
						"type": "text/javascript",
						"exec": [
							"var status_code = 200;",
							"",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{pages_api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{pages_api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "eae25c6c-2754-41e0-ac05-a04811a183df",
			"key": "users_api_url",
			"value": "api/users",
			"type": "string"
		},
		{
			"id": "0d75603e-f8af-4fae-890f-3a9a5f46666f",
			"key": "item_name",
			"value": "PleaseDoNotUse",
			"type": "string"
		},
		{
			"id": "a7e7b0b8-117e-42e4-86fc-cb555c2395aa",
			"key": "user_payload",
			"value": "{\n    \"username\": \"{{item_name}}\",\n    \"status\": \"active\",\n    \"password\": \"password\"\n}",
			"type": "string"
		},
		{
			"id": "c13c09a6-2ff7-4358-8a66-ead0366f85b2",
			"key": "page_payload",
			"value": "{\n    \"code\": \"{{item_name}}\",\n    \"displayedInMenu\": true,\n    \"pageModel\": \"home\",\n    \"charset\": \"utf8\",\n    \"contentType\": \"text/html\",\n    \"parentCode\": \"homepage\",\n    \"seo\": false,\n    \"titles\": {\n                \"it\":\"PleaseDoNotUse Titolo\",\n                \"en\":\"PleaseDoNotUse Title\"\n            },\n    \"ownerGroup\": \"administrators\",\n    \"joinGroups\": [\n    ]\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "5b97a544-2ecb-49bb-9a9b-4dbc23aa5518",
			"key": "pages_api_url",
			"value": "api/pages",
			"type": "string",
			"description": ""
		}
	]
}