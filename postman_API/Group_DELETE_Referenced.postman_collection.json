{
	"info": {
		"_postman_id": "fb2a5a9b-3548-40ca-ad97-307fb3d1c412",
		"name": "Group_DELETE_Referenced",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_User_Association_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30baed72-c589-41d3-bd8b-998db59d6d1a",
						"type": "text/javascript",
						"exec": [
							"//Label\tDELETE\t\tExistent\t200\tN/A\t\t\t\t\tDone",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/api/users/{{user_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_Group_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Groups_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c537679c-65e5-4cc1-8ead-382dad48fc50",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var status_code = 200",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Group set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.code).to.be.eql(item_name);",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(item_name);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{group_payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_User_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30baed72-c589-41d3-bd8b-998db59d6d1a",
						"type": "text/javascript",
						"exec": [
							"//Label\tDELETE\t\tExistent\t200\tN/A\t\t\t\t\tDone",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/api/users/{{user_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Users_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1538c496-171b-48d9-9755-d2d2172f3b50",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"User\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Not expected error code: \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{user_payload}}"
				},
				"url": {
					"raw": "{{url}}/api/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Role_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "729b778e-b01b-4a5e-a206-a3f7fbb419c5",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{role_payload}}"
				},
				"url": {
					"raw": "{{url}}/api/roles",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"roles"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_UserAuthorities_HELPER",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n        \"group\": \"{{item_name}}\",\n        \"role\": \"{{role_name}}\"\n    }\n]"
				},
				"url": {
					"raw": "{{url}}/api/users/{{user_name}}/authorities",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_name}}",
						"authorities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Group_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "636734c3-73a8-4e12-8ed2-8ccc4a4b07b9",
						"type": "text/javascript",
						"exec": [
							"//Groups\tPOST\t\tGroup not deletable\t409\t4\t\t\t\t\tDone",
							"",
							"var status_code = 409;",
							"var error_code = '4';",
							"var error_message = \"can not be deleted due to references\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{referenced_group}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{referenced_group}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_DELETED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "100b261a-c73e-446d-b171-ad8c4ba57bc2",
						"type": "text/javascript",
						"exec": [
							"var status_code = 200;",
							"var referenced_group = pm.variables.get(\"referenced_group\");",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(referenced_group);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{referenced_group}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{referenced_group}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_User_HELPER Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30baed72-c589-41d3-bd8b-998db59d6d1a",
						"type": "text/javascript",
						"exec": [
							"//Label\tDELETE\t\tExistent\t200\tN/A\t\t\t\t\tDone",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/api/users/{{user_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "7efabe13-bc60-4616-9b8e-a72c6c7946e4",
			"key": "api_url",
			"value": "api/groups",
			"type": "string"
		},
		{
			"id": "f05b5b23-7423-4440-ae3c-a67615b21939",
			"key": "item_name",
			"value": "PleaseDoNotUseThis",
			"type": "string"
		},
		{
			"id": "f8a7711f-6cd9-43b3-9db8-cc556f86321c",
			"key": "group_payload",
			"value": "{\n    \"name\": \"PleaseDoNotUseThis\",\n    \"code\": \"{{item_name}}\"\n }",
			"type": "string"
		},
		{
			"id": "de764fe8-e9f6-4e1f-82b8-8d04ddcc7bfe",
			"key": "referenced_group",
			"value": "PleaseDoNotUseThis",
			"type": "string",
			"description": ""
		},
		{
			"id": "94c7d5de-ec7c-47d2-b6f6-ec15bc195014",
			"key": "user_name",
			"value": "PleaseDoNotUseThis",
			"type": "string",
			"description": ""
		},
		{
			"id": "7fba2644-38c6-4533-9281-6177ca035a2b",
			"key": "user_payload",
			"value": "{\n    \"username\": \"{{user_name}}\",\n    \"status\": \"active\",\n    \"password\": \"password\"\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "66b79620-7ea9-4f55-b528-24ac36332e9d",
			"key": "role_name",
			"value": "PleaseDoNotUseThis",
			"type": "string",
			"description": ""
		},
		{
			"id": "f1fb77d7-a410-4e95-bc09-e8c208f1a2d3",
			"key": "role_payload",
			"value": "{\n\"name\": \"PleaseDoNotUseThis\",\n\"code\": \"PleaseDoNotUseThis\",\n\"permissions\": {\n\"editContents\": true,\n\"editUsers\": true\n}\n}",
			"type": "string",
			"description": ""
		}
	]
}