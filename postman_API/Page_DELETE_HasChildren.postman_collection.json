{
	"info": {
		"_postman_id": "22a3c42b-065d-409d-ab26-01c85fecb050",
		"name": "Page_DELETE_HasChildren",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_Child_Page_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1945255b-4749-4b45-a767-352ec76e8292",
						"type": "text/javascript",
						"exec": [
							"//Contract: 400, 2, The widget <widgetCode> cannot be deleted because it is locked",
							"var status_code = 200;",
							"var error_message = \"Pages with children pages can not be deleted\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_child_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_child_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE_Mother_Page_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b24dc6a4-6eb7-47a1-986b-f2422e683d37",
						"type": "text/javascript",
						"exec": [
							"//Contract: 400, 2, The widget <widgetCode> cannot be deleted because it is locked",
							"var status_code = 200;",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Mother_Page_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a96410d-4e93-427c-b66f-93744f2e2108",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Child_Page_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a96410d-4e93-427c-b66f-93744f2e2108",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_child_page}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Page_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "933d2113-0cf2-47f7-9229-569a9d2cfc9e",
						"type": "text/javascript",
						"exec": [
							"//Contract: 400, 2, The widget <widgetCode> cannot be deleted because it is locked",
							"var status_code = 400;",
							"var error_code = '2';",
							"var error_message = \"Pages with children pages can not be deleted\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{page_with_children}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{page_with_children}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_DELETED",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04184fa3-5945-478c-8ecb-70d612640720",
						"type": "text/javascript",
						"exec": [
							"var status_code = 200;",
							"",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{page_with_children}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{page_with_children}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b55335af-1acf-407a-95b2-b30459bd1a26",
			"key": "api_url",
			"value": "api/pages",
			"type": "string"
		},
		{
			"id": "a4e6fbc5-d255-4e55-9d78-7b1f3e4ee9a5",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "821770c9-ef5e-44af-9243-3aa5b2f5b07f",
			"key": "page_with_children",
			"value": "AAA",
			"type": "string",
			"description": ""
		},
		{
			"id": "6939f0cb-2e22-4c0a-9954-ddf3c6354e8b",
			"key": "payload",
			"value": "{\n    \"code\": \"{{item_name}}\",\n    \"displayedInMenu\": true,\n    \"pageModel\": \"home\",\n    \"charset\": \"utf8\",\n    \"contentType\": \"text/html\",\n    \"parentCode\": \"homepage\",\n    \"seo\": false,\n    \"titles\": {\n                \"it\":\"AAA Titolo\",\n                \"en\":\"AAA Title\"\n            },\n    \"ownerGroup\": \"administrators\",\n    \"joinGroups\": [\n        \"free\"\n    ]\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "b1c8e5f1-5d45-402e-b238-d26258d3c34a",
			"key": "payload_child_page",
			"value": "{\n    \"code\": \"{{item_child_name}}\",\n    \"displayedInMenu\": true,\n    \"pageModel\": \"home\",\n    \"charset\": \"utf8\",\n    \"contentType\": \"text/html\",\n    \"parentCode\": \"AAA\",\n    \"seo\": false,\n    \"titles\": {\n                \"it\":\"BBB Titolo\",\n                \"en\":\"BBB Title\"\n            },\n    \"ownerGroup\": \"administrators\",\n    \"joinGroups\": [\n        \"free\"\n    ]\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "c153bdfa-2e97-47a8-b1e0-31ce429a65f7",
			"key": "item_child_name",
			"value": "BBB",
			"type": "string",
			"description": ""
		}
	]
}