{
	"info": {
		"_postman_id": "ebba1580-9c34-4015-963e-905a8541b2b0",
		"name": "Group_PUT_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Groups_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cbe96e31-af52-498b-98bc-6ab3ebb54045",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Group set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.code).to.be.eql(\"AAA\");",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA\");",
							"    ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Group_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "38b63c4b-4983-4c28-ac01-a7cf46bc7d48",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"var status_code = 200;",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Group code is correct\", function(){",
							"    pm.expect(pm.response.json().payload.code).to.be.eql(\"AAA\");",
							"});",
							"",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Group name set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA modified\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_modified}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27ccf3f9-f821-45eb-8ab2-5109644f3c6e",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item code is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Group name set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA modified\");",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "64948e10-8c7e-4ab7-a88a-24fe6a40faef",
			"key": "api_url",
			"value": "api/groups",
			"type": "string"
		},
		{
			"id": "b61eb6a6-ab29-4f39-8b45-cd61a67c09dd",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "5128fad9-c3b9-424a-a1c8-b5ec208bdef9",
			"key": "payload",
			"value": "{\n    \"name\": \"AAA\",\n    \"code\": \"{{item_name}}\"\n }",
			"type": "string"
		},
		{
			"id": "2ad3f074-acb3-418a-83ed-7a4e65f407cb",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "f66f0684-7048-4f39-8e31-d37bd9eee89c",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "a67b4340-cca6-4533-8e0f-db9eaaef1e5a",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "e1a91ac0-4bab-456d-bd50-cc867d28bf8e",
			"key": "payload_modified",
			"value": "{\n    \"name\": \"AAA modified\",\n    \"code\": \"{{item_name}}\"\n }",
			"type": "string",
			"description": ""
		}
	]
}