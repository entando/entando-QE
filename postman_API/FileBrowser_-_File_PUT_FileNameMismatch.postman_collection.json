{
	"info": {
		"_postman_id": "168b6c22-a7d2-4124-9208-fecbd5694ba6",
		"name": "FileBrowser_-_File_PUT_FileNameMismatch",
		"description": "Test sulla POST di un file",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FileBrowser_-_File_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ceea42da-0c95-42ce-88a4-cd73421849be",
						"type": "text/javascript",
						"exec": [
							"",
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "FileBrowser_-_File_GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e8f91f4-872f-4761-ac84-86566f790753",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"var status_code = 200;",
							"var file_name = pm.variables.get(\"file_name\");",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.filename).to.eql(file_name);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/?protectedFolder=false&currentPath={{file_path}}/{{file_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						""
					],
					"query": [
						{
							"key": "protectedFolder",
							"value": "false"
						},
						{
							"key": "currentPath",
							"value": "{{file_path}}/{{file_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "FileBrowserPUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "341937d1-ca03-46da-9f8a-38e5053478ed",
						"type": "text/javascript",
						"exec": [
							"",
							"var jsonData = pm.response.json();",
							"var status_code = 409;",
							"var error_code = '5';",
							"var error_message = \"does not match\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_modified}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "FileBrowser_-_File_GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e7e1e9-e972-4bc9-8fe9-05dcb858d06d",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"var status_code = 200;",
							"var file_name = pm.variables.get(\"file_name\");",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.filename).to.eql(file_name);",
							"});",
							"",
							"pm.test(\"Parameters set correctly\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.protectedFolder).to.eql(false);",
							"    pm.expect(jsonData.payload.path).to.eql(\"//\"+file_name);",
							"    ",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/?protectedFolder=false&currentPath={{file_path}}/{{file_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						""
					],
					"query": [
						{
							"key": "protectedFolder",
							"value": "false"
						},
						{
							"key": "currentPath",
							"value": "{{file_path}}/{{file_name}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "706b8b30-65f4-4040-b24f-2b527422fe7a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f59bd18c-41c5-4d1f-9568-bf62089c4784",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "37f0a6d5-41fd-4ea0-9a21-d93d8a45c59d",
			"key": "api_url",
			"value": "api/fileBrowser/file",
			"type": "string",
			"description": ""
		},
		{
			"id": "6e7f4ce5-187e-4e42-80a8-3d02ff585d0b",
			"key": "file_path",
			"value": "/",
			"type": "string",
			"description": ""
		},
		{
			"id": "d6af8232-f551-40d6-a530-eb2a746b50df",
			"key": "file_name",
			"value": "PostmanTestFile.txt",
			"type": "string",
			"description": ""
		},
		{
			"id": "1fdb826a-001d-4fac-ab6d-f96b31537dbc",
			"key": "payload",
			"value": "{\n    \"protectedFolder\": false,\n    \"path\": \"/PostmanTestFile.txt\",\n    \"filename\": \"PostmanTestFile.txt\",\n    \"base64\": \"SGVsbG8gdGhpcyBpcyBwb3N0bWFuISE=\"\n}",
			"type": "string",
			"description": ""
		},
		{
			"id": "999090fa-c02e-4f17-9161-ff10678ad5b3",
			"key": "payload_modified",
			"value": "{\n    \"protectedFolder\": false,\n    \"path\": \"/NotExistent.txt\",\n    \"filename\": \"Mismatch.txt\",\n    \"base64\": \"SGVsbG8gdGhpcyBpcyBwb3N0bWFuIHRlc3QgbW9kaWZpZWQhISE=\"\n}",
			"type": "string",
			"description": ""
		}
	]
}