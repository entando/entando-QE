{
	"info": {
		"_postman_id": "eb47b05e-4acf-42d2-9b3e-0c5c5be9d91a",
		"name": "FileBrowser_-_Directory_POST_AlreadyPresent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FileBrowser_-_Directory_DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1f12fa5-5b33-4566-ae7f-ce9e75ed8cba",
						"type": "text/javascript",
						"exec": [
							"",
							"var deleteStatusCode = pm.environment.get(\"http_code_delete_existent\");",
							"var obj = \"directory\";",
							"",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"//Interpretazione del codice di errore",
							"pm.test(\"Status code is \" + deleteStatusCode, function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/?protectedFolder=false&currentPath={{dir_path}}/{{newDir_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						""
					],
					"query": [
						{
							"key": "protectedFolder",
							"value": "false"
						},
						{
							"key": "currentPath",
							"value": "{{dir_path}}/{{newDir_name}}"
						}
					]
				},
				"description": "Cancella l'eventuale cartella già presente"
			},
			"response": []
		},
		{
			"name": "FileBrowser_-_Directory_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27e93362-b8ce-42af-b819-cfeced969d3a",
						"type": "text/javascript",
						"exec": [
							"var codeObjPosted = 200;",
							"var obj = \"file\";",
							"var responseCode = pm.response.code;",
							"var jsonData = pm.response.json();",
							"",
							"//Verifica creazione",
							"pm.test(\"The \" + obj + \" has been created\", function(){",
							"            pm.response.to.have.status(codeObjPosted);",
							"        });",
							"",
							"//Verifica del path",
							"pm.test(\"The \" + obj +\"  name are set correctly\", function(){",
							"            pm.expect(jsonData.payload.path).to.be.eql(\"\" + pm.variables.get(\"dir_path\") + \"/\" + pm.variables.get(\"newDir_name\"));",
							"        });",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"//Altri codici di errore",
							"if(responseCode !== codeObjPosted)",
							"    {",
							"        pm.test(\"Got this message \" + responseCode, function () {",
							"        pm.expect(0).to.be.equal(1); //restituisce sempre un false nel test in cui il numero errore non è fra quelli previsti",
							"        });",
							"    }"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				},
				"description": "POST di una nuova cartella"
			},
			"response": []
		},
		{
			"name": "FileBrowser_GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffb43df8-6e3d-485d-9f78-e7c719d4ff00",
						"type": "text/javascript",
						"exec": [
							"",
							"var codeObjExist = 200;",
							"var obj = \"directory\";",
							"var jsonData = pm.response.json();",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"//verifica presenza directory",
							"pm.test(\"The \" + obj + \" exist\", function(){",
							"            pm.response.to.have.status(codeObjExist); //La directory esiste",
							"        });",
							"        ",
							"//altro codice di errore",
							"if(pm.response.code !== codeObjExist)",
							"    {",
							"        pm.test(\"Got this message \" + pm.response.code, function () {",
							"        pm.expect(0).to.be.equal(1); //restituisce sempre un false nel test in cui il numero errore non è fra quelli previsti",
							"        });",
							"    }"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/api/fileBrowser/?protectedFolder=false&currentPath={{dir_path}}/{{newDir_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"fileBrowser",
						""
					],
					"query": [
						{
							"key": "protectedFolder",
							"value": "false"
						},
						{
							"key": "currentPath",
							"value": "{{dir_path}}/{{newDir_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "FileBrowser_-_Directory_POST_Existent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d64860d1-fcd5-4cfa-ab33-e2c8645e7edb",
						"type": "text/javascript",
						"exec": [
							"",
							"var jsonData = pm.response.json();",
							"var status_code = 409;",
							"var error_code = '2';",
							"var error_message = \"already exists\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							"",
							"",
							"//Test sul tempo di risposta",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				},
				"description": "POST di una nuova cartella"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3eb61775-4b60-4987-aeb2-251ef0cc5869",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "eb4446a3-76bd-47f4-998e-af6b82c9f63a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b64066d8-7f5a-4b3c-9743-d72128d193a5",
			"key": "api_url",
			"value": "api/fileBrowser/directory",
			"type": "string",
			"description": ""
		},
		{
			"id": "181dfed2-d43c-4615-b499-3bf05bdbe3bf",
			"key": "dir_path",
			"value": "/",
			"type": "string",
			"description": ""
		},
		{
			"id": "d203747b-0770-4c81-bb66-6ec111210bc9",
			"key": "newDir_name",
			"value": "PostmanFolder",
			"type": "string",
			"description": ""
		},
		{
			"id": "aafccb2c-efe2-4c8e-a3ac-9a40e04854ad",
			"key": "payload",
			"value": "{\n    \"protectedFolder\": false,\n    \"path\": \"{{dir_path}}/{{newDir_name}}\"\n}",
			"type": "string",
			"description": ""
		}
	]
}