{"item":[

{
	"info": {
		"_postman_id": "897bcd45-88d6-41c3-bfc3-6bc08b379dc1",
		"name": "Access-Token",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Access Token POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fbfb3e06-066b-4404-b856-60530483f52c",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"access_token\", data.access_token);",
							"postman.setEnvironmentVariable(\"refresh_token\", data.refresh_token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests['Access Token is not blank'] = data.access_token !== \"\";",
							"tests['Refresh Token is not blank'] = data.refresh_token !== \"\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "28ca9674-96f9-40b8-8feb-2e724de9ff4e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "admin",
							"description": "",
							"type": "text"
						},
						{
							"key": "password",
							"value": "adminadmin",
							"description": "",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"description": "",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "REST_API",
							"description": "",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "REAST_API_SEC",
							"description": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/OAuth2/access_token",
					"host": [
						"{{url}}"
					],
					"path": [
						"OAuth2",
						"access_token"
					]
				},
				"description": "Request to return the Access Token (based on Bearer Token)"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8cab39a6-d4a2-4447-b651-76c83284188d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2d880ebb-d1ed-4a41-af93-fd91103c2000",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
},
{
	"info": {
		"_postman_id": "5d4bee6e-df89-43e6-9a2f-7e00deae0a74",
		"name": "Data-Model",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET the data model with a valid data model id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0a8fd23-2de7-44c8-998d-ce22920c0865",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"var data = JSON.parse(responseBody);",
							"tests[\"Data Model Id\"] = data.payload.modelId === \"1000\";",
							"tests[\"Data Model description\"] = data.payload.descr === \"MyDataModel\";",
							"tests[\"Data Model type code is right\"] = data.payload.type === \"AAA\";",
							"",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ab67cd15-58ae-4bb7-a845-2ea738bf030d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataModels/1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET the data model with the unexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6688e445-042d-4a67-ae2a-a2344fc3a0bd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 404\"] = responseCode.code === 404;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataModels/0000",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"0000"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE the data model with the valid data model id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27fa32af-8fdf-4bbc-bdf3-0413e526f077",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/dataModels/1005",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"1005"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE the data model with the unexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "735a21e3-4835-41fb-9eb9-01e552218d9c",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/dataModels/0000",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"0000"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "da974405-9334-4752-abc5-8320345a69b2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f530de10-be3e-4907-986e-48843ba4bb50",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
},
{
	"info": {
		"_postman_id": "de7a14e3-7d0d-4fd8-ab53-d86a6bddb554",
		"name": "Data-Models",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Read the data models",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d364961b-45c7-4363-a033-9cc3681db14e",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataModels",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read the data models List with filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d9979c7-ba2d-4941-a1c0-f70a60f47c1e",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api//dataModels?sort=code&direction=ASC&filters[0][attribute]=code&filters[0][operator]=eq&filters[0][value]=%D%&page=1&pageSize=5",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"",
						"dataModels"
					],
					"query": [
						{
							"key": "sort",
							"value": "code"
						},
						{
							"key": "direction",
							"value": "ASC"
						},
						{
							"key": "filters[0][attribute]",
							"value": "code"
						},
						{
							"key": "filters[0][operator]",
							"value": "eq"
						},
						{
							"key": "filters[0][value]",
							"value": "%D%"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "5"
						},
						{
							"key": null,
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Read the data models List with filter1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fad5ba14-1266-4893-bf12-609de14970c4",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api//dataModels?sort=code&direction=DESC&filters[0][attribute]=code&filters[0][operator]=eq&filters[0][value]=%D%&page=1&pageSize=2",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"",
						"dataModels"
					],
					"query": [
						{
							"key": "sort",
							"value": "code"
						},
						{
							"key": "direction",
							"value": "DESC"
						},
						{
							"key": "filters[0][attribute]",
							"value": "code"
						},
						{
							"key": "filters[0][operator]",
							"value": "eq"
						},
						{
							"key": "filters[0][value]",
							"value": "%D%"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "2"
						},
						{
							"key": null,
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create the data models",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb69bf41-ee24-4d14-9005-70025b6ffa0a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"1008\",\n    \"descr\": \"MyModel\",\n    \"type\": \"AAA\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create the data model  with the unexisting page model code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5a59928-c2f6-4c13-8e23-50a2bdf6fa89",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 400\"] = responseCode.code === 400;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"\",\n    \"descr\": \"MyModel\",\n    \"type\": \"8888\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create the data models  with the unexisting Type Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1ac3fd8-72a6-4611-b298-5abe653210e9",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 404\"] = responseCode.code === 404;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"1110\",\n    \"descr\": \"MyModel\",\n    \"type\": \"8888\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Models",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33dc48f4-12a0-4469-9090-f91d44c70e64",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"1004\",\n    \"descr\": \"My Model1\",\n    \"type\": \"AAA\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels/1005",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"1005"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Models with unexisting page model id in the URI",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9f575c6-c44a-4b2c-9ab7-99aa40c06af2",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 400\"] = responseCode.code === 400;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"1004\",\n    \"descr\": \"My Model\",\n    \"type\": \"AAA\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels/0000",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"0000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Models with unexisting page model id in the URI and in payload",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a4ed4cc-87eb-4d4e-ad0a-dae3e5c7a4cd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 404\"] = responseCode.code === 404;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"0000\",\n    \"descr\": \"My Model\",\n    \"type\": \"AAA\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels/0000",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"0000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Models with the unexisting type code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "61cd1ca1-2fd9-434c-868a-ba628a4fb47c",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 404\"] = responseCode.code === 404;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"modelId\": \"1004\",\n    \"descr\": \"My Model\",\n    \"type\": \"88888\",\n    \"model\": \"data model sample\",\n    \"stylesheet\": \"\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataModels/1004",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataModels",
						"1004"
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "e58737d3-d71b-412b-a23e-68df0f714126",
		"name": "Data-Type",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Read Data Type with code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6b755aa-2aff-41da-b9a2-0242c0236f15",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer  {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataTypes/AAA",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"AAA"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Data Type with unexisting code",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataTypes/unexistingcode",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"unexistingcode"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Type with code",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"MyDataType\",\n        \"code\": \"BBB\",\n        \"attributes\": [{\n            \"type\": \"Date\",\n            \"code\": \"DDD\",\n            \"name\": \"MyDate\",\n            \"roles\": [],\n            \"mandatory\": true,\n            \"listFilter\": true,\n            \"indexable\": true,\n            \"enumeratorStaticItems\": null,\n            \"enumeratorStaticItemsSeparator\": null,\n            \"enumeratorExtractorBean\": null,\n            \"validationRules\": {\n                    \"ognlValidation\": {\n                        \"ognlExpression\": \"expression\",\n                        \"applyOnlyToFilledAttr\": false,\n                        \"helpMessage\": \"Help message\",\n                        \"keyForHelpMessage\": null,\n                        \"errorMessage\": \"Error Message\",\n                        \"keyForErrorMessage\": null\n                    },\n                    \"minLength\": null,\n                    \"maxLength\": null,\n                    \"regex\": null,\n                    \"rangeStartString\": null,\n                    \"rangeEndString\": null,\n                    \"rangeStartStringAttribute\": null,\n                    \"rangeEndStringAttribute\": null,\n                    \"equalString\": null,\n                    \"equalStringAttribute\": null,\n                    \"rangeStartDate\": null,\n                    \"rangeEndDate\": null,\n                    \"rangeStartDateAttribute\": null,\n                    \"rangeEndDateAttribute\": null,\n                    \"equalDate\": null,\n                    \"equalDateAttribute\": null,\n                    \"rangeStartNumber\" : null,\n                     \"rangeStartNumberAttribute\" : null,\n                    \"rangeEndNumber\" : null,\n                    \"rangeEndNumberAttribute\" : null,\n                    \"equalNumber\" : null,\n                    \"equalNumberAttribute\" : null\n            },\n            \"nestedAttribute\": null,\n            \"compositeAttributes\": null\n        }],\n        \"viewPage\": null,\n        \"listModel\": null,\n        \"defaultModel\": null\n    }"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/BBB",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"BBB"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Type with unexisting code",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"MyDataType\",\n        \"code\": \"XXX\",\n        \"attributes\": [{\n            \"type\": \"Date\",\n            \"code\": \"DDD\",\n            \"name\": \"MyDate\",\n            \"roles\": [],\n            \"mandatory\": true,\n            \"listFilter\": true,\n            \"indexable\": true,\n            \"enumeratorStaticItems\": null,\n            \"enumeratorStaticItemsSeparator\": null,\n            \"enumeratorExtractorBean\": null,\n            \"validationRules\": {\n                    \"ognlValidation\": {\n                        \"ognlExpression\": \"expression\",\n                        \"applyOnlyToFilledAttr\": false,\n                        \"helpMessage\": \"Help message\",\n                        \"keyForHelpMessage\": null,\n                        \"errorMessage\": \"Error Message\",\n                        \"keyForErrorMessage\": null\n                    },\n                    \"minLength\": null,\n                    \"maxLength\": null,\n                    \"regex\": null,\n                    \"rangeStartString\": null,\n                    \"rangeEndString\": null,\n                    \"rangeStartStringAttribute\": null,\n                    \"rangeEndStringAttribute\": null,\n                    \"equalString\": null,\n                    \"equalStringAttribute\": null,\n                    \"rangeStartDate\": null,\n                    \"rangeEndDate\": null,\n                    \"rangeStartDateAttribute\": null,\n                    \"rangeEndDateAttribute\": null,\n                    \"equalDate\": null,\n                    \"equalDateAttribute\": null,\n                    \"rangeStartNumber\" : null,\n                     \"rangeStartNumberAttribute\" : null,\n                    \"rangeEndNumber\" : null,\n                    \"rangeEndNumberAttribute\" : null,\n                    \"equalNumber\" : null,\n                    \"equalNumberAttribute\" : null\n            },\n            \"nestedAttribute\": null,\n            \"compositeAttributes\": null\n        }],\n        \"viewPage\": null,\n        \"listModel\": null,\n        \"defaultModel\": null\n    }"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/XXX",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"XXX"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Type with a mismatching between URI and payload",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"MyDataType\",\n        \"code\": \"TTT\",\n        \"attributes\": [{\n            \"type\": \"Date\",\n            \"code\": \"DDD\",\n            \"name\": \"MyDate\",\n            \"roles\": [],\n            \"mandatory\": true,\n            \"listFilter\": true,\n            \"indexable\": true,\n            \"enumeratorStaticItems\": null,\n            \"enumeratorStaticItemsSeparator\": null,\n            \"enumeratorExtractorBean\": null,\n            \"validationRules\": {\n                    \"ognlValidation\": {\n                        \"ognlExpression\": \"expression\",\n                        \"applyOnlyToFilledAttr\": false,\n                        \"helpMessage\": \"Help message\",\n                        \"keyForHelpMessage\": null,\n                        \"errorMessage\": \"Error Message\",\n                        \"keyForErrorMessage\": null\n                    },\n                    \"minLength\": null,\n                    \"maxLength\": null,\n                    \"regex\": null,\n                    \"rangeStartString\": null,\n                    \"rangeEndString\": null,\n                    \"rangeStartStringAttribute\": null,\n                    \"rangeEndStringAttribute\": null,\n                    \"equalString\": null,\n                    \"equalStringAttribute\": null,\n                    \"rangeStartDate\": null,\n                    \"rangeEndDate\": null,\n                    \"rangeStartDateAttribute\": null,\n                    \"rangeEndDateAttribute\": null,\n                    \"equalDate\": null,\n                    \"equalDateAttribute\": null,\n                    \"rangeStartNumber\" : null,\n                     \"rangeStartNumberAttribute\" : null,\n                    \"rangeEndNumber\" : null,\n                    \"rangeEndNumberAttribute\" : null,\n                    \"equalNumber\" : null,\n                    \"equalNumberAttribute\" : null\n            },\n            \"nestedAttribute\": null,\n            \"compositeAttributes\": null\n        }],\n        \"viewPage\": null,\n        \"listModel\": null,\n        \"defaultModel\": null\n    }"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/AAA",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"AAA"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Data Type with mismatching between URI and payload",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"MyDataType\",\n        \"code\": \"TTT\",\n        \"attributes\": [{\n            \"type\": \"Date\",\n            \"code\": \"DDD\",\n            \"name\": \"MyDate\",\n            \"roles\": [],\n            \"mandatory\": true,\n            \"listFilter\": true,\n            \"indexable\": true,\n            \"enumeratorStaticItems\": null,\n            \"enumeratorStaticItemsSeparator\": null,\n            \"enumeratorExtractorBean\": null,\n            \"validationRules\": {\n                    \"ognlValidation\": {\n                        \"ognlExpression\": \"expression\",\n                        \"applyOnlyToFilledAttr\": false,\n                        \"helpMessage\": \"Help message\",\n                        \"keyForHelpMessage\": null,\n                        \"errorMessage\": \"Error Message\",\n                        \"keyForErrorMessage\": null\n                    },\n                    \"minLength\": null,\n                    \"maxLength\": null,\n                    \"regex\": null,\n                    \"rangeStartString\": null,\n                    \"rangeEndString\": null,\n                    \"rangeStartStringAttribute\": null,\n                    \"rangeEndStringAttribute\": null,\n                    \"equalString\": null,\n                    \"equalStringAttribute\": null,\n                    \"rangeStartDate\": null,\n                    \"rangeEndDate\": null,\n                    \"rangeStartDateAttribute\": null,\n                    \"rangeEndDateAttribute\": null,\n                    \"equalDate\": null,\n                    \"equalDateAttribute\": null,\n                    \"rangeStartNumber\" : null,\n                     \"rangeStartNumberAttribute\" : null,\n                    \"rangeEndNumber\" : null,\n                    \"rangeEndNumberAttribute\" : null,\n                    \"equalNumber\" : null,\n                    \"equalNumberAttribute\" : null\n            },\n            \"nestedAttribute\": null,\n            \"compositeAttributes\": null\n        }],\n        \"viewPage\": null,\n        \"listModel\": null,\n        \"defaultModel\": null\n    }"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/ZZZ",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"ZZZ"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Data Type with code",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/UUU",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"UUU"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Data Type with unexisting code",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/dataTypes/ZZZ",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes",
						"ZZZ"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "11734d22-9872-4e7b-8657-d1465edc4419",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d5aa4740-208a-4d6c-997d-045e8361bff0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "99ef18a1-12ca-4ac5-88c0-efbbad22a9c4",
			"key": "Authorization",
			"value": "Bearer {{accessToken}}",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "e84199e9-9dac-4fc7-8cf3-074f6f057ff1",
		"name": "Data-Types",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get the Data Types",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40144c89-ac07-4eb8-b05b-5907fb1fc5bd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataTypes?page=1&pageSize=5",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get the Data Types list with not valid filter",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/dataTypes?page=0&pageSize=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "pageSize",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST the Data Type with the existing code",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"MyDataType11\",\n    \"code\": \"AAA\",\n    \"attributes\": [{\n        \"type\": \"Date\",\n        \"code\": \"CCC\",\n        \"name\": \"MyDate2\",\n        \"status\": \"0\",\n        \"roles\": [{\n            \"code\": \"firstCode\",\n            \"descr\": \"firstCode\"\n        },{\n            \"code\": \"secondCode\",\n            \"descr\": \"secondDescr\"\n        }],\n        \"disablingCodes\": [\n            \"firstDisablingCode\",\n            \"secondDisablingCode\"\n        ],\n        \"mandatory\": true,\n        \"listFilter\": true,\n        \"indexable\": true,\n        \"enumeratorStaticItems\": null,\n        \"enumeratorStaticItemsSeparator\": null,\n        \"enumeratorExtractorBean\": null,\n        \"validationRules\": {\n            \"ognlValidation\": {\n                \"ognlExpression\": \"expression\",\n                \"applyOnlyToFilledAttr\": false,\n                \"helpMessage\": \"Help message\",\n                \"keyForHelpMessage\": null,\n                \"errorMessage\": \"Error Message\",\n                \"keyForErrorMessage\": null\n            },\n            \"minLength\": null,\n            \"maxLength\": null,\n            \"regex\": null,\n            \"rangeStartString\": null,\n            \"rangeEndString\": null,\n            \"rangeStartStringAttribute\": null,\n            \"rangeEndStringAttribute\": null,\n            \"equalString\": null,\n            \"equalStringAttribute\": null,\n            \"rangeStartDate\": null,\n            \"rangeEndDate\": null,\n            \"rangeStartDateAttribute\": null,\n            \"rangeEndDateAttribute\": null,\n            \"equalDate\": null,\n            \"equalDateAttribute\": null,\n            \"rangeStartNumber\" : null,\n                \"rangeStartNumberAttribute\" : null,\n            \"rangeEndNumber\" : null,\n            \"rangeEndNumberAttribute\" : null,\n            \"equalNumber\" : null,\n            \"equalNumberAttribute\" : null\n        },\n        \"nestedAttribute\": null,\n        \"compositeAttributes\": null\n    }],\n      \"viewPage\": null,\n      \"listModel\": null,\n      \"defaultModel\": null\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST the new Data Type",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"MyDataType5\",\n    \"code\": \"JJJ\",\n    \"attributes\": [{\n        \"type\": \"Date\",\n        \"code\": \"FFF\",\n        \"name\": \"MyDate3\",\n        \"status\": \"0\",\n        \"roles\": [{\n            \"code\": \"firstCode\",\n            \"descr\": \"firstCode\"\n        },{\n            \"code\": \"secondCode\",\n            \"descr\": \"secondDescr\"\n        }],\n        \"disablingCodes\": [\n            \"firstDisablingCode\",\n            \"secondDisablingCode\"\n        ],\n        \"mandatory\": true,\n        \"listFilter\": true,\n        \"indexable\": true,\n        \"enumeratorStaticItems\": null,\n        \"enumeratorStaticItemsSeparator\": null,\n        \"enumeratorExtractorBean\": null,\n        \"validationRules\": {\n            \"ognlValidation\": {\n                \"ognlExpression\": \"expression\",\n                \"applyOnlyToFilledAttr\": false,\n                \"helpMessage\": \"Help message\",\n                \"keyForHelpMessage\": null,\n                \"errorMessage\": \"Error Message\",\n                \"keyForErrorMessage\": null\n            },\n            \"minLength\": null,\n            \"maxLength\": null,\n            \"regex\": null,\n            \"rangeStartString\": null,\n            \"rangeEndString\": null,\n            \"rangeStartStringAttribute\": null,\n            \"rangeEndStringAttribute\": null,\n            \"equalString\": null,\n            \"equalStringAttribute\": null,\n            \"rangeStartDate\": null,\n            \"rangeEndDate\": null,\n            \"rangeStartDateAttribute\": null,\n            \"rangeEndDateAttribute\": null,\n            \"equalDate\": null,\n            \"equalDateAttribute\": null,\n            \"rangeStartNumber\" : null,\n                \"rangeStartNumberAttribute\" : null,\n            \"rangeEndNumber\" : null,\n            \"rangeEndNumberAttribute\" : null,\n            \"equalNumber\" : null,\n            \"equalNumberAttribute\" : null\n        },\n        \"nestedAttribute\": null,\n        \"compositeAttributes\": null\n    }],\n      \"viewPage\": null,\n      \"listModel\": null,\n      \"defaultModel\": null\n}"
				},
				"url": {
					"raw": "{{url}}/api/dataTypes",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"dataTypes"
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "6f1e8132-f788-4c8d-bb59-09b049cd18ed",
		"name": "Entity-Manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Read Entity Manager with a valid entity manager code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2e44966-b2c2-4927-82c8-108466eb9afd",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/entityManagers/UserProfileManager",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"entityManagers",
						"UserProfileManager"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Entity Manager with an unexisting entity manager code",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63823445-5400-4034-b618-afbc07ad86b0",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 404\"] = responseCode.code === 404;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/entityManagers/UserProfileManager00",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"entityManagers",
						"UserProfileManager00"
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "c15dcb8f-cb1e-41db-b909-bbe074270dd9",
		"name": "Entity-Managers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Read Entity Managers List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8cd41691-20be-4d40-9a84-c97f3051b754",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/entityManagers",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"entityManagers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Entity Managers List with filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "083b8baa-3827-4ec8-80ba-85298b2d027e",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/api/entityManagers?page=1&pageSize=5",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"entityManagers"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "pageSize",
							"value": "5"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a28cea00-e4cb-4b0c-8a8b-c216de55d9ed",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0f75fee-1da6-4784-a4c3-3b5ab908a7c7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "d62cff23-f6af-40bf-8097-43e2f1a393a2",
			"key": "Authorization",
			"value": "Bearer {{accessToken}}",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "e822cd75-67fc-46aa-93d0-cd073c43c343",
		"name": "Fragments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Fragment Details",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/default_pagerInfo_is",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"default_pagerInfo_is"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Fragments LIST",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/fragments/?sort=code&direction=ASC&filters[0][attribue]=code&filters[0][operator]=eq&filters[0][value]=%D%&page=2&pageSize=5",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"fragments",
						""
					],
					"query": [
						{
							"key": "sort",
							"value": "code"
						},
						{
							"key": "direction",
							"value": "ASC"
						},
						{
							"key": "filters[0][attribue]",
							"value": "code"
						},
						{
							"key": "filters[0][operator]",
							"value": "eq"
						},
						{
							"key": "filters[0][value]",
							"value": "%D%"
						},
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "pageSize",
							"value": "5"
						},
						{
							"key": null,
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Fragment with an invalid code in the payload",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"fragmentupdate1\",\n    \"guiCode\": \"<div>Sabrina1</div>\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/fragments/fragmentupdate",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"fragments",
						"fragmentupdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Fragment with an invalid fragment code in the URI",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"fragmentupdate100\",\n    \"guiCode\": \"<div>Sabrina</div>\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/fragments/fragmentupdate100",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"fragments",
						"fragmentupdate100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Fragment with a valide code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"fragmentupdate\",\n    \"guiCode\": \"<div>Sabrina</div>\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/fragments/fragmentupdate",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"fragments",
						"fragmentupdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Fragment with a invalide guiCode",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"fragmentupdate\",\n    \"guiCode\": null\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/fragments/fragmentupdate",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"fragments",
						"fragmentupdate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Fragment with a valide code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/deletefragment",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"deletefragment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Fragment with a unvalide code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/deletefragment1",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"deletefragment1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Fragment with the referenced fragments",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/jacms_content_viewer",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"jacms_content_viewer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Fragment that is locked",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/internal_servlet_generic_error",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"internal_servlet_generic_error"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Fragment Details with uncorrect code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments/default_pagerInfo_",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments",
						"default_pagerInfo_"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Fragment with a valid code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"code\": \"myfragment1\",\n  \"guiCode\": \"<div>testFragment1</div>\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Fragment with an invalid code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"code\": \"mycodemycodemycodemycodemycodemycodemycodemycodemycodemycodemycode\",\n  \"guiCode\": \"<div>provaFragment</div>\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Fragment with an invalid guiCode",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "7ddbe99c6baa134627b8cb0dfb6110a3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"code\": \"invalideguiCode\",\n  \"guiCode\": \"null1\"\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api//fragments",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"",
						"fragments"
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "ba8f59f3-3d95-4e24-90b3-dbb7976a3853",
		"name": "Groups",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://tests.serv.run/entando-sample/api/groups/free",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3e70ff22-53e0-481a-870f-aca681d017e2",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"correct code in the payload\"] = jsonData.payload.code === \"free\";",
							"tests[\"correct name in the payload\"] = jsonData.payload.name === \"Free Access\";",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "539b757d007bc470f0af48678b2ba934",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/groups/free",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"groups",
						"free"
					]
				},
				"description": "Request to Read the Group. The User should be authorized "
			},
			"response": []
		},
		{
			"name": "http://tests.serv.run/entando-sample/api/groups",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7d2f3be9-60af-43d1-9c65-83f77d4c8619",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "722b4183-b5f3-4356-a60b-8a272fff61fe",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "539b757d007bc470f0af48678b2ba934",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/groups",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"groups"
					]
				},
				"description": "Request to read the Groups"
			},
			"response": []
		},
		{
			"name": "http://tests.serv.run/entando-sample/api/groups/free",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "468f7f80-2ecf-4736-8fed-2d60ed3d4a1f",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"correct code in the payload\"] = jsonData.payload.code === \"free\";",
							"tests[\"correct name in the payload\"] = jsonData.payload.name === \"Free Access\";",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "539b757d007bc470f0af48678b2ba934",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Free Access\",\n    \"code\": \"free\"\n }"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/groups/free",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"groups",
						"free"
					]
				},
				"description": "Request to edit groups. The User should be authorized.\n\n"
			},
			"response": []
		},
		{
			"name": "http://tests.serv.run/entando-sample/api/groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df188336-3859-45f7-97e8-4b3f2d180c49",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "539b757d007bc470f0af48678b2ba934",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test12\",\n    \"code\": \"test12\"\n }"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/groups",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"groups"
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "f83a2e29-0ede-493f-acdb-18e114a1383a",
		"name": "Label_DELETE_Existent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3e5a631-da69-481b-8ca1-f387ab553ae1",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 400;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === 400){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30baed72-c589-41d3-bd8b-998db59d6d1a",
						"type": "text/javascript",
						"exec": [
							"//Label\tDELETE\t\tExistent\t200\tN/A\t\t\t\t\tDone",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "865240a1-ff47-4538-b6c9-5b58aef10b65",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "4a773a67-e38e-4a24-b7f1-d99e2eab6857",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "f8cd8d54-8a77-418e-a81f-37c993fa0025",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "28ff7fcd-1713-4dac-a7b0-fa7a5cf2b79d",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "ec75dcf7-09b9-4e17-a5e1-cfe6cd9cdeed",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "265d632c-163f-4488-8a89-9d9cf6e7281c",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "cc0434d1-a876-4583-864f-5420ffee7e0f",
		"name": "Label_DELETE_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "761939e0-5105-4665-af80-57486a939f5a",
						"type": "text/javascript",
						"exec": [
							"//Label\tDELETE\t\tNotExistent\t200\tN/A\t\t\t\t\tDone",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0ba64866-768c-4c1d-a7fb-6cc75d310755",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "65128733-a893-4d47-8b3d-d06cb283a606",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "685df1d9-e48c-441c-b56b-a9c7ee46c233",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "9e601b99-6cad-4c4e-aee6-60aec73024de",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "a9cabf19-59fd-423e-badf-8633bb3938e8",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "382cfbf9-deec-44f3-8831-852135afd119",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "54651c2e-b752-4eb5-82d6-c491ca48b1de",
		"name": "Label_GET_Existent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3e5a631-da69-481b-8ca1-f387ab553ae1",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 400;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === 400){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aea9bcf1-3b7c-4044-8cc3-1bccc1864119",
						"type": "text/javascript",
						"exec": [
							"//Label\tGET\t\tExistent\t200\tN/A\t\t\t\t\tDone",
							"",
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "da0f0d7d-d787-47b5-ac5f-f5fc5a8f5bda",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "d8c77679-cec2-41fa-879a-3c1840f5ee42",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "1e967689-3053-4283-a3eb-e56a47441ea7",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "97d00ee2-d8ba-452e-b8a1-59c61063d0eb",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "3401ded4-31c2-4320-b9b6-0cdc974f10a1",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "2cd45ed6-ed72-4085-a420-4963cfaeab68",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "e3ba8266-586e-4900-ac18-96fa9867210e",
		"name": "Label_GET_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75d75bff-2ca4-49e3-ba92-9b1730c6d3ae",
						"type": "text/javascript",
						"exec": [
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fe61bde9-41d2-49df-a278-9e8fc226b1f8",
						"type": "text/javascript",
						"exec": [
							"//Label\tGET\t\tNotExistent\t404\t1\tno label found with code <labelcode> Done",
							"",
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ff332f16-068a-4a89-8a24-c4b7a581b891",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "b507b772-9427-4e3b-a565-cd31c9370634",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "6b86684c-dd79-49ec-9ab2-a0191c2e1d5c",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "e8d0ca19-9862-4308-8699-372f37b81dec",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "d156dfa7-4980-4e97-83af-dc84b8414f63",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "5e2876fc-257d-4f7b-9a02-34976941dd0a",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "315acf54-62e2-4898-b380-0cf692b6cec8",
		"name": "Label_PUT_LanguageCodeInvalid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36b5b7c2-e129-4a8c-b799-29d3b15f2be3",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1da81af-9b94-4c7e-8b94-559b7b35acff",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tLangCodeNotValid\t400\t4\t\t\t\t\tDone",
							"",
							"var status_code = 400;",
							"var error_code = '4';",
							"var error_message = \"not valid\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_language_not_valid}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14556b81-d5bc-4250-93ca-1dd85ceb0a02",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "da1666b8-f292-4e11-992b-28a2b2f1136b",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "f0e49440-44c3-40a5-9e43-3e7265854369",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "2d8d4bfd-0463-49de-9075-3dc179a10349",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "f1119e35-0e0a-4a7d-83c1-f1fe9ab6d868",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "f8329fbc-02b6-4f8f-8e87-fdf69aed3ef1",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "36504e7d-47e7-44fa-8b4c-1676918ba007",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "3e300b7e-496d-4a4c-b352-1a2887c7c6e5",
		"name": "Label_PUT_LanguageCodeNotActive",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36b5b7c2-e129-4a8c-b799-29d3b15f2be3",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e4881e26-a2b3-4f3b-8a59-035c69cfb1ce",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tLangCodeNotActive\t400\t3\t\t\t\t\tDone",
							"",
							"var status_code = 400;",
							"var error_code = '3';",
							"var error_message = \"not active\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_language_not_active}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14556b81-d5bc-4250-93ca-1dd85ceb0a02",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cae23949-e659-48cb-a61b-33929c2f7d6c",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "f6def6cd-a065-45aa-9e2b-9ff34e5c132d",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "21b6dd45-053f-499f-962a-b9877d112b3c",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "c4fdfd4c-ec5a-40cb-b0c6-446b4fcc26ee",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "7a9badfb-69fa-4d8b-b332-26bb10cba32a",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "91842251-bea8-469a-afc2-fc6553719897",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "0cdb1d47-a955-49f5-8ecc-6acb72403ea7",
		"name": "Label_PUT_MissingLanguageCode",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36b5b7c2-e129-4a8c-b799-29d3b15f2be3",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b13f81e6-01c3-415f-b166-9882365936d9",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tDefaultLangMissing\t400\t2\t\t\t\t\tDone",
							"",
							"var status_code = 400;",
							"var error_code = '2';",
							"var error_message = \"default lang is required\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_missing_default_language}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14556b81-d5bc-4250-93ca-1dd85ceb0a02",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c1526288-4c2a-4caf-abc7-a79287788c3c",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "7775e2a1-96fd-4d20-b103-147521aab709",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "dcfeb012-8319-48c0-811f-80f6a8401029",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "0a29e756-bcb3-4302-94cd-cb6ac95b28a0",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "34223378-1e3b-44b1-b75a-5f16a01641cc",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "6d46ef43-801f-4be7-8738-07f0205ddeb4",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "76db14f6-3ab3-4363-a2e0-99c8246fddb7",
		"name": "Label_PUT_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70904307-fe8c-4ed2-b42f-39b2c1ad4bb2",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tNotExistent\t404\t1\t\t\t\t\tDone",
							"",
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "dcb7715e-440c-46d4-a42a-5c5225cd9936",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "e3e51062-a08c-4abb-9421-205f968e043c",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "82abca1c-d6f7-4a08-a1f2-7c1559ac2a8c",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "9e5730b3-38a5-44cc-a816-abded69553bc",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "929c9384-37bc-4ba5-b660-bc14469c02f2",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "495b7756-0b7c-4d9a-9449-167f8291bb8d",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "1c8e1447-1698-4115-8ef4-102566886dbc",
		"name": "Label_PUT_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36b5b7c2-e129-4a8c-b799-29d3b15f2be3",
						"type": "text/javascript",
						"exec": [
							"//Contract for POST Successful: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Label_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f996fa7d-5cef-4bb4-9d6b-ce01ab7a6f9f",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"var status_code = 200;",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Profile type code is correct\", function(){",
							"    pm.expect(pm.response.json().payload.key).to.be.eql(\"AAA\");",
							"});",
							"",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title changed\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo modificato\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_modified}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5734b7aa-505d-423d-8640-ee1f0486a96d",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title changed\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo modificato\");",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a9ab5aee-0341-4bc3-a182-a61ec24d6704",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "dbd99244-5f0f-48e3-9c1e-244e3a220fc0",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "5a401161-b1da-4dbb-ad45-cd8faeeef685",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "7c7f5d1f-8acb-427a-b036-7f9f0c53f5dc",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "3f1a054d-2e9c-42cd-8d5c-952f2795cbc1",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "4874cc16-6f8e-4069-969b-1f0f56e50db5",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "7eb376c4-5b7f-4bc5-b004-2ec369e8e9a4",
			"key": "payload_modified",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo modificato\",\n        \"en\": \"My Title changed\"\n    }\n }",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "a9790dfd-0402-4259-a1da-ea316a275673",
		"name": "Labels_GET",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Labels_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf02eddc-50c9-40b2-b3e1-4e5c44e686ce",
						"type": "text/javascript",
						"exec": [
							"//Labels\tGET\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var GET_status_code = 200;",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "af88ac9f-11bd-4abc-aa62-b146055ed479",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "4f831c82-3fce-4403-9153-8799db2e99f3",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "e4a830a3-2ea8-4ce2-a25d-58195804025e",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "b030366e-2383-4ecc-9761-7e8a29a01222",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "dc8d1b5b-9ddb-4035-ba2f-c368cc1c0663",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "21e30058-a333-47c6-a601-e0a788acd38f",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "9a54d182-8a43-4dd7-8244-419f7e541d0c",
		"name": "Labels_POST_AlreadyPresent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3e5a631-da69-481b-8ca1-f387ab553ae1",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 400;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === 400){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14556b81-d5bc-4250-93ca-1dd85ceb0a02",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bfc88c8-218e-49a6-bde8-433cdf366470",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tCodeAlreadyPresent\t409\t1\t\t\t\t\tDone",
							"//Labels\tPOST\t\tCodeAlreadyPresent\t409\t1\t\t\t\t\tDone",
							"",
							"var status_code = 409;",
							"var error_code = '1';",
							"var error_message = \"already exists\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "a5342ba6-7ebd-4d27-a6b3-6946bd255112",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "d3f40d71-5d4a-445a-aa8b-44285a85beb3",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "e7a3efdb-24b7-427d-87ed-008d2bd5de59",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "283e4ca8-939f-4d30-aab1-34a58153e319",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "315a3049-9cf0-44d1-8b76-a1c8b482c0cf",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "e8e98063-0185-433c-95bd-6338632b944b",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "b3cc3504-a193-4b69-afdc-440c0345d7d9",
		"name": "Labels_POST_LanguageNotActive",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82ea6dc3-ad26-4405-9adf-2a58466de4db",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tLangCodeNotActive\t400\t3\t\t\t\t\tDone",
							"",
							"",
							"var status_code = 400;",
							"var error_code = '3';",
							"var error_message = \"not active\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_language_not_active}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "48c6f7ca-2aa5-4e14-8c7f-39c308aa751d",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "3b8bfd8c-eeb8-4657-a969-aac226bdb013",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "24b1964d-c577-4f79-be86-66351bdb85f9",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "518c6109-a3b9-4006-92a0-104d5f8c58d0",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "c6103e41-3958-49b5-b0b3-680eaa719476",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "2363cd9d-2ef9-4181-840d-99bdf10b2d32",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "11a3a84d-1f4e-4609-b58f-c69a579e0166",
		"name": "Labels_POST_LanguageNotValid",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a594667b-3a67-436a-bebd-11fe5a68449e",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tLangCodeNotValid\t400\t4\t\t\t\t\tDone",
							"",
							"var status_code = 400;",
							"var error_code = '4';",
							"var error_message = \"not valid\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_language_not_valid}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "5c03e6f9-9d93-4e8c-8dcc-c787594758bd",
			"key": "api_url",
			"value": "api/labels",
			"type": "string",
			"description": ""
		},
		{
			"id": "343553b5-3694-4d03-a1a1-f2c1e5fb144c",
			"key": "item_name",
			"value": "AAA",
			"type": "string",
			"description": ""
		},
		{
			"id": "98e0f94c-f20d-4d29-a535-22e882ab56d2",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string",
			"description": ""
		},
		{
			"id": "ff9ff792-78e1-47ca-9efe-b413297b9fd9",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string",
			"description": ""
		},
		{
			"id": "2bbf83b4-c108-4ca9-832f-f461b3d07dfa",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string",
			"description": ""
		},
		{
			"id": "36ae2df0-fa06-4c87-8526-83a3e2606473",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "5a2d2ae1-a3a0-423d-bc06-a20a03769504",
		"name": "Labels_POST_MissingDefaultLanguage",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5076ce57-69b7-4227-b699-ef29a42bc326",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tDefaultLangMissing\t400\t2\t\t\t\t\tDone",
							"",
							"",
							"var status_code = 400;",
							"var error_code = '2';",
							"var error_message = \"default lang is required\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_missing_default_language}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "71a57d22-7c03-414d-ba78-bf15c6a93725",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "8b3b267d-332e-420d-a7d9-d273770bf838",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "2c4361ea-0062-4e69-ae48-c983d8b93d60",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "e1ee444d-6446-4a13-a529-5c9c8cf98c8b",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "8b8a39ca-ab43-43cf-a831-48b6f00281d7",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "f27e66cf-4f2b-46b5-b340-03d4eb6ff70e",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "496c9707-86e8-43d8-98eb-7e19a6e068cf",
		"name": "Labels_POST_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Labels_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e15b378-b0ed-454d-8a0d-e8698d76f833",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Titles are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.titles.en).to.be.eql(\"My Title\");",
							"    pm.expect(pm.response.json().payload.titles.it).to.be.eql(\"Mio Titolo\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14556b81-d5bc-4250-93ca-1dd85ceb0a02",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.key).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c4b4c714-b107-4306-b559-d959717a43cb",
			"key": "api_url",
			"value": "api/labels",
			"type": "string"
		},
		{
			"id": "42b3e7b5-2b5d-46a4-9f3e-759aaced9e4c",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "2fd18082-ed1f-4f6e-997b-4ab1707249ca",
			"key": "payload",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "520eb095-92a5-4cd7-88da-ab359460ec43",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "466a12b1-a960-4999-a08c-8dfd84d0868a",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "897f4a62-6217-4255-beed-62e239e53cd6",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "45f2f566-3f4b-48c5-9b0d-edea21513c23",
		"name": "Page-Configuration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Page Configuration ",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "abe34089310ef2c637048fbf3c34e416",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pages/draftpage/configuration",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pages",
						"draftpage",
						"configuration"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Page Configuration with unexisting page code",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "abe34089310ef2c637048fbf3c34e416",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pages/publishedpage00/configuration?status=published",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pages",
						"publishedpage00",
						"configuration"
					],
					"query": [
						{
							"key": "status",
							"value": "published"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Page Configuration with a valide page code and a invalide status",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "abe34089310ef2c637048fbf3c34e416",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pages/draftpage/configuration?status=published",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pages",
						"draftpage",
						"configuration"
					],
					"query": [
						{
							"key": "status",
							"value": "published"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Page Configuration with a valide page code and a default draft status",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "abe34089310ef2c637048fbf3c34e416",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pages/publishedpage/configuration?status=draft",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pages",
						"publishedpage",
						"configuration"
					],
					"query": [
						{
							"key": "status",
							"value": "draft"
						}
					]
				}
			},
			"response": []
		}
	]
},
{
	"info": {
		"_postman_id": "d9867383-82e1-4946-b088-dac599b18b3d",
		"name": "Page-Settings",
		"description": "Collection of the API test related to the Pages",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Page Settings GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a84107de-7c30-4524-a38c-0387b9cb886f",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "c27d53e8631363c9ad66e85ae589cbc4",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pageSettings",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pageSettings"
					]
				},
				"description": "Request to read global page settings. The User should be authorized."
			},
			"response": []
		},
		{
			"name": "Page Settings PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d760aa4-3d7c-4116-9fa3-5cc87ff42085",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"value is classic|breadcrumbs\"] = jsonData.payload.params.value = \"classic|breadcrumbs\";"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "c27d53e8631363c9ad66e85ae589cbc4",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"params\": [{\n            \"name\": \"urlStyle\",\n            \"value\": \"classic|breadcrumbs\"\n        },\n        {\n            \"name\": \"treeStyle_page\",\n            \"value\": \"classic|request\"\n        },\n        {\n            \"name\": \"startLangFromBrowser\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"baseUrl\",\n            \"value\": \"classic|request|static\"\n        },\n        {\n            \"name\": \"baseUrlContext\",\n            \"value\": \"true\"\n        },\n        {\n            \"name\": \"useJsessionId\",\n            \"value\": \"false\"\n        }, {\n            \"name\": \"notFoundPageCode\",\n            \"value\": \"notfound\"\n        },\n        {\n            \"name\": \"homePageCode\",\n            \"value\": \"homepage\"\n        },\n        {\n            \"name\": \"errorPageCode\",\n            \"value\": \"errorpage\"\n        },\n        {\n            \"name\": \"loginPageCode\",\n            \"value\": \"login\"\n        }\n    ]\n }"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/pageSettings",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"pageSettings"
					]
				},
				"description": "Request to write global page settings. The user \nshould be authorized."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "aea44fd8-b251-45ed-ab22-2ae1157f42e0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b1bbf487-7481-4bab-876f-55c665d12115",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
},
{
	"info": {
		"_postman_id": "41ff6d32-2dca-4c19-a685-b151d4ce75e1",
		"name": "Role_DELETE_Existent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15bdfa55-ff26-43aa-8557-a19afb64183f",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ebf34f8-8071-403e-b17b-f29ce0a83981",
						"type": "text/javascript",
						"exec": [
							"//Role\tDELETE\t\tExistent\t200\tN/A",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ac6b242a-3b4a-4baf-a53f-c910f8a63a10",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "e8fcb22b-ed84-4b33-bda0-d11727cab00f",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "8da1b804-182e-45df-abc9-ce9ac5621103",
			"key": "payload",
			"value": "{\n\"name\": \"AAA\",\n\"code\": \"AAA\",\n\"permissions\": {\n\"editContents\": true,\n\"editUsers\": true\n}\n}",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "5fe4e80a-2bc6-4385-aecc-38de1d55a19d",
		"name": "Role_GET_Existent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c45ae4b-9186-4213-b8ea-7dcfa9065036",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6ac75a0-1d89-494b-a483-7491644bdb5c",
						"type": "text/javascript",
						"exec": [
							"//Role\tGET\t\tExistent\t200",
							"",
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "263d9faf-f78b-4e28-94c1-a762f2fa4aed",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "15769251-9c6d-4bee-9933-fe0319c9be67",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "e677c86b-3570-40ee-b326-16bd6059b362",
			"key": "payload",
			"value": "{\n    \"name\": \"AAA-Name\",\n    \"code\": \"AAA\",\n    \"permissions\": {\n        \"editContents\": true,\n        \"editUserProfile\": true\n    }\n }",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "8c47a281-5b25-423b-a4b9-b32fb9404f60",
		"name": "Role_GET_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75d75bff-2ca4-49e3-ba92-9b1730c6d3ae",
						"type": "text/javascript",
						"exec": [
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7089eb56-c534-4fd6-be84-6a51f4c4adca",
						"type": "text/javascript",
						"exec": [
							"//Role\tGET\t\tNotExistent\t404\t1",
							"",
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ced02c77-9352-4060-8f11-cbc020aea4fa",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "e9012217-88e7-41b2-820b-2a2842afe049",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "146bc938-b3dd-49e7-b32d-25f1ec86518e",
		"name": "Role_PUT_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70904307-fe8c-4ed2-b42f-39b2c1ad4bb2",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tNotExistent\t404\t1\t\t\t\t\tDone",
							"",
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "15a35c51-8fa0-41ba-a0f8-51c50b2a3fc5",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "d8d7759e-ef08-4a56-b506-96651ef55bf4",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "55db4690-ff9a-4383-a7f7-f68c5ba55da3",
			"key": "payload",
			"value": "{\n    \"name\": \"AAA\",\n    \"code\": \"AAA\",\n    \"permissions\": {\n        \"editContents\": true,\n        \"editUsers\": true\n    }\n }",
			"type": "string"
		},
		{
			"id": "dcd9a0db-ed84-46be-8938-976e33baa7f5",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "02dcdabe-3485-48d3-bda2-18fa122dc468",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "8befa882-053c-4e53-95ed-d07d748b8574",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "90c7595e-e710-48a9-b08d-5f223fbb1187",
		"name": "Role_PUT_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "035bda99-fb5b-454a-b6b1-d69f94d089ba",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 400;",
							"var obj = \"obj\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === 400){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f437a363-c5be-4a43-87ab-19df67c25527",
						"type": "text/javascript",
						"exec": [
							"//Label\tPUT\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"var status_code = 200;",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Role code is correct\", function(){",
							"    pm.expect(pm.response.json().payload.code).to.be.eql(\"AAA\");",
							"});",
							"",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Name is set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA-Modified\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload_modified}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72d193cd-9bba-460d-bc28-2f2582c3a998",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(item_name);",
							"});",
							"",
							"pm.test(\"Name is set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA-Modified\");",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "bb648846-a362-4a60-92ea-c852e49026c6",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "3a285a43-97be-4cdb-b5c1-d697d2a57e77",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "c7061ea6-c912-4ae8-a1a6-f84d041c5f8b",
			"key": "payload",
			"value": "{\n    \"name\": \"AAA\",\n    \"code\": \"AAA\",\n    \"permissions\": {\n        \"editContents\": true,\n        \"editUsers\": true\n    }\n }",
			"type": "string"
		},
		{
			"id": "9b68c46a-c0ea-4159-a695-405e095dfcf7",
			"key": "payload_modified",
			"value": "{\n    \"name\": \"AAA-Modified\",\n    \"code\": \"AAA\",\n    \"permissions\": {\n        \"editContents\": true,\n        \"editUsers\": false\n    }\n }",
			"type": "string",
			"description": ""
		}
	]
},
{
	"info": {
		"_postman_id": "246e6744-8a59-47b6-b434-ccd48f92e0e3",
		"name": "Roles_DELETE_NotExistent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Role_DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fcfd63bd-cefc-4497-ab5f-4a9843f48ebf",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Not Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER_NOT_FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3550ac-7540-4537-8e35-9f285e745438",
						"type": "text/javascript",
						"exec": [
							"var status_code = 404;",
							"var error_code = '1';",
							"var error_message = \"code could not be found\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1cbd5c80-50bd-4831-8f98-7d6686346cdc",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "154c7c67-c5e4-4394-a023-9ccb346091ca",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "ecef6289-3eef-46bf-9f87-87404516fdbf",
		"name": "Roles_GET",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Roles_GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf02eddc-50c9-40b2-b3e1-4e5c44e686ce",
						"type": "text/javascript",
						"exec": [
							"//Labels\tGET\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var GET_status_code = 200;",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f5028997-be6f-41fe-af30-dbb62c2deaec",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "f6b96f3f-d15b-4883-8d79-39c82be7c4cf",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "aa78d36a-a15d-4fc6-8382-458a512b3c4a",
			"key": "payload",
			"value": "{\n    \"name\": \"AAA-Name\",\n    \"code\": \"AAA\",\n    \"permissions\": {\n        \"editContents\": true,\n        \"editUserProfile\": true\n    }\n }",
			"type": "string"
		},
		{
			"id": "ec7cd5d5-3763-4d4e-b989-af41a9325df2",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "6d8bb1bd-b011-4153-96f4-6a96058f5323",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "993d0b79-b02d-480d-9e39-fad7529b696e",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "09ee2eda-9be1-426f-93ec-c78cebba5fc8",
		"name": "Roles_POST_AlreadyPresent",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "729b778e-b01b-4a5e-a206-a3f7fbb419c5",
						"type": "text/javascript",
						"exec": [
							"//Post HELPER CREATES AN OBJECT FOR FURTHER USAGE",
							"",
							"var codeObjCreated = 200;",
							"var codeObjAlreadyExistent = 409;",
							"var obj = \"object\";",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"if(pm.response.code === codeObjCreated){",
							"    pm.test(\"new \" + obj + \" has been created\", function(){",
							"        return true;",
							"    });",
							"} else if(pm.response.code === codeObjAlreadyExistent){",
							"    pm.test(obj + \" already present\", function(){",
							"         pm.expect(jsonData.errors[0].message).to.include(\"already exists\");",
							"    }); ",
							"} else {",
							"    pm.test(\"Got this message \" + pm.response.code, function () {",
							"    pm.expect(0).to.be.equal(1);",
							"    });",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b76610ad-56e0-4075-914b-bb8f05fdc37d",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bfc88c8-218e-49a6-bde8-433cdf366470",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tCodeAlreadyPresent\t409\t1\t\t\t\t\tDone",
							"//Labels\tPOST\t\tCodeAlreadyPresent\t409\t1\t\t\t\t\tDone",
							"",
							"var status_code = 409;",
							"var error_code = '1';",
							"var error_message = \"already exists\";",
							"",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Error code is \" + error_code, function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].code).to.eql(error_code);",
							"});",
							"",
							"pm.test(\"Error message is correct \", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.errors[0].message).to.include(error_message);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "8c1f98f2-d655-405e-a164-4180355adc53",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "925578ec-cd0b-455d-8537-643802fd1e93",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "a7dff552-c449-4198-92e7-fd7dd2b8be9b",
			"key": "payload",
			"value": "{\n\"name\": \"AAA\",\n\"code\": \"AAA\",\n\"permissions\": {\n\"editContents\": true,\n\"editUsers\": true\n}\n}",
			"type": "string"
		},
		{
			"id": "473536dd-4406-4d76-970c-dc803671f47e",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "71109c52-540a-46b0-ab56-b46355a82548",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "017c2e32-47aa-4f5a-ad56-a207b2f2aa58",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "eb5381d5-0d75-409c-96f0-92b232e92906",
		"name": "Roles_POST_Success",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfdb2979-633f-47df-aecf-82ca7fed9d30",
						"type": "text/javascript",
						"exec": [
							"//Contract for DELETE Existent: Status Code: \"200\", Error Code: \"-\", Error Message: \"-\"",
							"var DELETE_status_code = pm.environment.get(\"http_code_delete_existent\");",
							"var labelName= \"AAA1\";",
							"pm.test(\"Status code is \" + DELETE_status_code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n }"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roles_POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41dcb4ba-560a-490d-bb0a-8fdd4ec435f3",
						"type": "text/javascript",
						"exec": [
							"//Labels\tPOST\t\tSuccess\t200\tN/A\t\t\t\t\tDone",
							"",
							"var status_code = 200",
							"",
							"pm.test(\"Status code is \" + status_code, function () {",
							"    pm.response.to.have.status(status_code);",
							"});",
							"",
							"pm.test(\"Payload array is not empty\", function(){",
							"    var array_length = pm.response.json().payload.length;",
							"    pm.expect(array_length).to.not.be.eql(0);",
							"});",
							"",
							"",
							"pm.test(\"Parameters are set correctly\", function(){",
							"    pm.expect(pm.response.json().payload.code).to.be.eql(\"AAA\");",
							"    pm.expect(pm.response.json().payload.name).to.be.eql(\"AAA\");",
							"    pm.expect(pm.response.json().payload.permissions.editUsers).to.be.eql(true);",
							"    pm.expect(pm.response.json().payload.permissions.editContents).to.be.eql(true);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{payload}}"
				},
				"url": {
					"raw": "{{url}}/{{api_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_HELPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cfc0af9-0acc-4527-bd13-cf0029b7de19",
						"type": "text/javascript",
						"exec": [
							"var GET_status_code = 200;",
							"var item_name = pm.variables.get(\"item_name\");",
							"",
							"//check status code",
							"pm.test(\"Status code is \" + GET_status_code, function () {",
							"    pm.response.to.have.status(GET_status_code);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Payload not empty\", function () {",
							"   var jsonData = pm.response.json();",
							"  pm.expect(jsonData.payload).to.not.be.eql({});",
							"});",
							"",
							"",
							"pm.test(\"Item name is correct\", function (){",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.payload.code).to.eql(item_name);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/{{api_url}}/{{item_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{api_url}}",
						"{{item_name}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b969a4d0-a3a8-472e-89fb-7f2c2bfcc6d7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "83a2dbc4-539e-41a6-918f-0f07c6957bfb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c57c0c4b-e2bf-4dcc-bf43-6da114ab132f",
			"key": "api_url",
			"value": "api/roles",
			"type": "string"
		},
		{
			"id": "cd202d04-15c2-4ee8-bd17-df05d4958022",
			"key": "item_name",
			"value": "AAA",
			"type": "string"
		},
		{
			"id": "23f70030-a2c7-480d-9eed-dbafbe10cad2",
			"key": "payload",
			"value": "{\n\"name\": \"AAA\",\n\"code\": \"AAA\",\n\"permissions\": {\n\"editContents\": true,\n\"editUsers\": true\n}\n}",
			"type": "string"
		},
		{
			"id": "08eb0172-85de-4743-a680-8a1bf6e307ba",
			"key": "payload_missing_default_language",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "eaadb99c-5207-449a-a513-76f06c6b24f3",
			"key": "payload_language_not_active",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"bg\": \"Bulgarian\"\n    }\n }",
			"type": "string"
		},
		{
			"id": "0da0b63c-3986-4468-93ed-fe62cd46b2c3",
			"key": "payload_language_not_valid",
			"value": "{\n    \"key\": \"{{item_name}}\",\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n\"en\": \"My Title\",\n\"zz\": \"Language Not Existent\"\n    }\n }",
			"type": "string"
		}
	]
},
{
	"info": {
		"_postman_id": "4e3c2f49-4aa2-4681-b7cc-cb62b0e30cd5",
		"name": "Widgets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Widgets GET List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0032f518-f3d9-42d3-b5f7-4e3aba0234af",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response is not empty\"] = response.message !== \"\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response body matches code\"] = response.message = \"content_viewer\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response body matches titles\"] = response.message = \"My Title\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response body matches plugin\"] = response.message = \"jacms\";",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/widgets",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"widgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Widgets GET content_viewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90f3e9a5-839e-4b4d-ac9a-a9537202bc73",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response is not empty\"] = response.message !== \"\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking payload parameter from response is null\"] = response.payload === null",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking metadata parameter from response is null\"] = response.metadata === null",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking errors array is empty\"] = response.errors.length === 0;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 046f6284de20d5a4dc8a0b8b459d8194"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/widgets/new_content_type",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"widgets",
						"new_content_type"
					]
				}
			},
			"response": []
		},
		{
			"name": "Widgets GET content_viewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "451cad4a-8347-4d35-bdf2-c8a30862c8f9",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response is not empty\"] = response.message !== \"\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking payload parameter from response\"] = response.payload === \"new_content_type\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking metadata parameter from response\"] = response.metadata === null",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking errors parameter from response\"] = response.errors.length === 0;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer c17326fd0146fd6a2113a01fce8992c1"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/widgets/new_content_type",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"widgets",
						"new_content_type"
					]
				}
			},
			"response": []
		},
		{
			"name": "Widgets GET content_viewer copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9096261d-fc17-4b79-879a-c3ac50d8a08a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response is not empty\"] = response.message !== \"\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking code parameter from response\"] = response.payload.code === \"content_viewer\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking name parameter from response\"] = response.payload.name === null;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking used parameter from response\"] = response.payload.used === true;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"titles is not empty\"] = response.payload.titles.lenght !== 0;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking guiFragments parameter from response\"] = response.payload.guiFragments.length === 0;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking pluginCode parameter from response\"] = response.payload.pluginCode === null;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking group parameter from response\"] = response.payload.group === null;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking createdAt parameter from response\"] = response.payload.createdAt === null;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking updatedAt parameter from response\"] = response.payload.updatedAt === null;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking errors parameter from response\"] = response.errors.length === 0;",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking metadata parameter from response\"] = response.metadata === null;",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 046f6284de20d5a4dc8a0b8b459d8194"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"content_viewer\",\n    \"used\": true,\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/widgets",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"widgets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Widgets GET content_viewer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4884484f-d14c-48e2-80bc-5ae2d2701255",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"The Content-Type is JSON\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=UTF-8\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response is not empty\"] = response.message !== \"\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response body matches code\"] = response.message = \"content_viewer\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"response body matches name\"] = response.name = \"null\";",
							"",
							"var response = JSON.parse(responseBody);",
							"tests[\"Checking used parameter from response\"] = response.payload.used === true;",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 046f6284de20d5a4dc8a0b8b459d8194"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"content_viewer\",\n    \"used\": true,\n    \"titles\": {\n        \"it\": \"Mio Titolo\",\n        \"en\": \"My Title\"\n    }\n}"
				},
				"url": {
					"raw": "http://tests.serv.run/entando-sample/api/widgets/content_viewer",
					"protocol": "http",
					"host": [
						"tests",
						"serv",
						"run"
					],
					"path": [
						"entando-sample",
						"api",
						"widgets",
						"content_viewer"
					]
				}
			},
			"response": []
		}
	]
}]}
